package Kayako::REST::Client;
use strict;
use warnings;

use Kayako::REST::Controller::Ticket;
use Kayako::REST::Controller::TicketNote;
use Kayako::REST::Controller::TicketPost;

$Kayako::REST::Client::VERSION = "0.09";

sub new {
	my $class = shift;
	my $self = {};
						
	$self->{'verify_hostname'} = 0;
		
	bless ($self,$class);
	
	return $self;
	}

sub ApiKey () {
            	   my $self = shift; 
            	   if (@_) {
            	   	   $self->{'api_key'} = shift;
            	   	  
            	   	}
            	   	else {
            	   return $self->{'api_key'};
            	   	}
            }
            
sub SecretKey () {
            	   my $self = shift; 
            	    if (@_) {
            	   	   $self->{'secret_key'} = shift;
            	   	  
            	   	}
            	   	else {
            	   return $self->{'secret_key'};
            	   	}
            	  
            }
            
sub Url () {
            	   my $self = shift; 
            	   if (@_) {
            	   	   $self->{'url'} = shift;
            	   	  
            	   	}
            	   	else {
            	   return $self->{'url'};
            	   	}
            	
            }
            
sub VerifyHostname () {
            	   my $self = shift; 
            	   if (@_) {
            	   	   $self->{'verify_hostname'} = shift;
            	   	  
            	   	}
            	   	else {
            	   return $self->{'verify_hostname'};
            	   	}
            	
            }
            
sub _NewController {
            	  my ($self,$controller) = @_;
            	  	
		$error = "Constructor takes a HASH refrence as an argument\n" unless 
				ref($self) eq 'HASH';
		$error = "URL seems to be invalid\n" unless 
				$self->{'url'} =~ m!^https?\:{1}\/{2}(a-z0-9\.)*\/api\/index\.php\?e?=?!);
		
				if ($error) {
					warn $error;
					return undef;
				}
				else {
					return $controller->new($self);
				}
            }
            
sub Ticket {
            	    my $self = shift;
            	    return _NewController ($self,'Kayako::REST::Controller::Ticket');
            }
sub TicketNote {
            	    my $self = shift;
            	    return _NewController ($self,'Kayako::REST::Controller::TicketNote');
            }
sub TicketPost {
            	    my $self = shift;
            	    return _NewController ($self,'Kayako::REST::Controller::TicketPost');
            }   
            
            
1;